话题一： 图布局（Graph Layout ->   information visualization）

1. 概览

按照触发条件分类

1.1 自动布局（AutoLayout）
用户框选或全选后，点击布局按钮，触发自动布局。

1）张力斥力

2）分层

3）随机+约束条件 （放型、圆形等等）


1.2 添加节点（search around）
围绕中心节点的布局


1.3 鼠标拖拽


从技术角度出发

布局算法要生成图中节点的坐标

如何利用边?


数据建模

点

边
有向/无向



2. 图布局算法
Hierarchical graph visualization functionality 

2.1 输入数据描述
root nodes
nodes_v1
edges_v1

2.2 输出数据描述
nodes_v2
edges_v1

分层布局算法
第一层节点坐标

第二层节点坐标

第三层节点坐标
...

第n层节点


局部选中的自动布局
obj1.property1 =（obj2.property2 * multiplier）+ constant value

3. 布局存储

4. 其它
约束条件
位置，大小

参照
约束是针对那部分试图而言？


AutoLayout 的核心原理：
     > view具有自我计算尺寸，布局的能力。通过它自身的内容，能够得到尺寸。
     > view的布局位置，确定于它与superview及其他view的关系。 
     > 与传统的autoresizingmask自适应相比，AutoLayout更精确，能绝对的确定view的布局。
     > view不一定需要一个初始的rect。AutoLayout中，view如果有足够的constraint，便可以确定自己的尺寸和位置，并且知道自己和其他view的关系。即，想确定view的布局，就给它（们）添加constraint。


Sugiyam Hierarchical Layout
All Pairs Shortest Path
Spring Embedded Layout



话题二： 
自动调整尺寸 （autoresizing）
