# Learn Spring Boot (MVC) in 50 Minutes

	
   actuator
http://blog.didispace.com/spring-boot-actuator-1/

   jpa


spring make web application easier.

overview of spring architecture?
JPA: java persistence API
map relation database to object, operate on object.

# caching with spring: advaced topics and best practice
https://www.youtube.com/watch?v=3NLS7147UQo
what to cache?  cache read operations
where to cache? different layer (database itself, access layer, business layer, http cache)
which cache product to use?
local vs distributed?


cache does not provide security
Spring tutorial 2



# with mysql

https://springframework.guru/configuring-spring-boot-for-mysql/
it mentioned h2 is configured by spring boot by default.

  JPA : Hibernate
  http://www.h2database.com/html/main.html
why JPA?
any other alternatives? mybatis

the following example could be used to refactor neo4j JDBC api

http://www.tutorialspoint.com/spring/spring_jdbc_example.htm


# spring mvc
https://www.youtube.com/watch?v=iCQspqBpOB0
-application framework
  huge framework,  solve common business problem, no need repeat for every application.
-program and configuration model
  multiple step config
-infrastructure support


## IoC

## AOP
what?
https://www.youtube.com/watch?v=WK2qbVqEeKk

separate service (web-logic, or other provider webspum?) from business logic
https://www.youtube.com/watch?v=JbDmpsCqGRg
* Aspect  - service

* Advice - service provider  
按照执行时间分类。按照业务功能分类
```
before - security check, loggin

after - send email

around - transaction, logging

after throwing - cleanup, send email, send jms

```

* point cut - a poit to execute

* adviser - advice + point cut 

```
some method does not require aop, some method require aop, we need filter in function
```

# teamtreehourse.com

